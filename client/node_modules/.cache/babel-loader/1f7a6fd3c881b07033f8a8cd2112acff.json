{"ast":null,"code":"document.addEventListener('DOMContentLoaded',()=>{const createNoteButton=document.getElementById('create-note');const saveNoteButton=document.getElementById('save-note');const noteForm=document.getElementById('note-form');const notesContainer=document.getElementById('notes-container');const loginButton=document.getElementById('login-button');const registerButton=document.getElementById('register-button');const loginSubmitButton=document.getElementById('login-submit');const registerSubmitButton=document.getElementById('register-submit');const logoutButton=document.getElementById('logout-button');const loginForm=document.getElementById('login-form');const registerForm=document.getElementById('register-form');const authForms=document.getElementById('auth-forms');const authNav=document.getElementById('auth-nav');const userNav=document.getElementById('user-nav');let selectedColor='#ffffff';const API_BASE_URL='http://localhost:3000';// Ensure this matches your backend server's URL\nloginButton.addEventListener('click',()=>{loginForm.style.display='block';registerForm.style.display='none';});registerButton.addEventListener('click',()=>{registerForm.style.display='block';loginForm.style.display='none';});loginSubmitButton.addEventListener('click',async()=>{const username=document.getElementById('login-username').value;const password=document.getElementById('login-password').value;const response=await fetch(\"\".concat(API_BASE_URL,\"/login\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password})});if(response.ok){const data=await response.json();localStorage.setItem('token',data.token);authForms.style.display='none';authNav.style.display='none';userNav.style.display='flex';fetchNotes();}else{alert('Login failed');}});registerSubmitButton.addEventListener('click',async()=>{const username=document.getElementById('register-username').value;const password=document.getElementById('register-password').value;const response=await fetch(\"\".concat(API_BASE_URL,\"/register\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password})});if(response.ok){const data=await response.json();localStorage.setItem('token',data.token);authForms.style.display='none';authNav.style.display='none';userNav.style.display='flex';fetchNotes();}else{alert('Registration failed');}});logoutButton.addEventListener('click',()=>{localStorage.removeItem('token');authNav.style.display='flex';userNav.style.display='none';notesContainer.innerHTML='';authForms.style.display='block';});createNoteButton.addEventListener('click',()=>{noteForm.style.display='block';});saveNoteButton.addEventListener('click',async()=>{const title=document.getElementById('note-title').value;const content=document.getElementById('note-content').value;const tags=document.getElementById('note-tags').value.split(',').map(tag=>tag.trim());const reminder=document.getElementById('note-reminder').value;const response=await fetch(\"\".concat(API_BASE_URL,\"/notes\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('token'))},body:JSON.stringify({title,content,tags,reminder,color:selectedColor})});if(response.ok){const note=await response.json();renderNote(note);noteForm.style.display='none';}else{alert('Failed to save note');}});document.querySelectorAll('.color-btn').forEach(button=>{button.addEventListener('click',event=>{selectedColor=event.target.getAttribute('data-color');});});async function fetchNotes(){const response=await fetch(\"\".concat(API_BASE_URL,\"/notes\"),{headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});const notes=await response.json();notes.forEach(note=>renderNote(note));}function renderNote(note){const noteElement=document.createElement('div');noteElement.className='note';noteElement.style.backgroundColor=note.color;noteElement.innerHTML=\"\\n        <div class=\\\"note-header\\\">\\n          <h2>\".concat(note.title,\"</h2>\\n          <div class=\\\"note-tags\\\">\").concat(note.tags.join(', '),\"</div>\\n        </div>\\n        <p>\").concat(note.content,\"</p>\\n        \").concat(note.reminder?\"<p>Reminder: \".concat(new Date(note.reminder).toLocaleString(),\"</p>\"):'',\"\\n      \");notesContainer.appendChild(noteElement);}async function fetchReminders(){notesContainer.innerHTML='';const response=await fetch(\"\".concat(API_BASE_URL,\"/notes/reminders\"),{headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});const notes=await response.json();notes.forEach(note=>renderNote(note));}document.getElementById('view-reminders').addEventListener('click',fetchReminders);fetchNotes();});","map":{"version":3,"names":["document","addEventListener","createNoteButton","getElementById","saveNoteButton","noteForm","notesContainer","loginButton","registerButton","loginSubmitButton","registerSubmitButton","logoutButton","loginForm","registerForm","authForms","authNav","userNav","selectedColor","API_BASE_URL","style","display","username","value","password","response","fetch","concat","method","headers","body","JSON","stringify","ok","data","json","localStorage","setItem","token","fetchNotes","alert","removeItem","innerHTML","title","content","tags","split","map","tag","trim","reminder","getItem","color","note","renderNote","querySelectorAll","forEach","button","event","target","getAttribute","notes","noteElement","createElement","className","backgroundColor","join","Date","toLocaleString","appendChild","fetchReminders"],"sources":["C:/Users/gunda/notemaker/client/src/index.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const createNoteButton = document.getElementById('create-note');\r\n    const saveNoteButton = document.getElementById('save-note');\r\n    const noteForm = document.getElementById('note-form');\r\n    const notesContainer = document.getElementById('notes-container');\r\n    const loginButton = document.getElementById('login-button');\r\n    const registerButton = document.getElementById('register-button');\r\n    const loginSubmitButton = document.getElementById('login-submit');\r\n    const registerSubmitButton = document.getElementById('register-submit');\r\n    const logoutButton = document.getElementById('logout-button');\r\n    const loginForm = document.getElementById('login-form');\r\n    const registerForm = document.getElementById('register-form');\r\n    const authForms = document.getElementById('auth-forms');\r\n    const authNav = document.getElementById('auth-nav');\r\n    const userNav = document.getElementById('user-nav');\r\n    let selectedColor = '#ffffff';\r\n  \r\n    const API_BASE_URL = 'http://localhost:3000'; // Ensure this matches your backend server's URL\r\n  \r\n    loginButton.addEventListener('click', () => {\r\n      loginForm.style.display = 'block';\r\n      registerForm.style.display = 'none';\r\n    });\r\n  \r\n    registerButton.addEventListener('click', () => {\r\n      registerForm.style.display = 'block';\r\n      loginForm.style.display = 'none';\r\n    });\r\n  \r\n    loginSubmitButton.addEventListener('click', async () => {\r\n      const username = document.getElementById('login-username').value;\r\n      const password = document.getElementById('login-password').value;\r\n  \r\n      const response = await fetch(`${API_BASE_URL}/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username, password })\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        localStorage.setItem('token', data.token);\r\n        authForms.style.display = 'none';\r\n        authNav.style.display = 'none';\r\n        userNav.style.display = 'flex';\r\n        fetchNotes();\r\n      } else {\r\n        alert('Login failed');\r\n      }\r\n    });\r\n  \r\n    registerSubmitButton.addEventListener('click', async () => {\r\n      const username = document.getElementById('register-username').value;\r\n      const password = document.getElementById('register-password').value;\r\n  \r\n      const response = await fetch(`${API_BASE_URL}/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username, password })\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        localStorage.setItem('token', data.token);\r\n        authForms.style.display = 'none';\r\n        authNav.style.display = 'none';\r\n        userNav.style.display = 'flex';\r\n        fetchNotes();\r\n      } else {\r\n        alert('Registration failed');\r\n      }\r\n    });\r\n  \r\n    logoutButton.addEventListener('click', () => {\r\n      localStorage.removeItem('token');\r\n      authNav.style.display = 'flex';\r\n      userNav.style.display = 'none';\r\n      notesContainer.innerHTML = '';\r\n      authForms.style.display = 'block';\r\n    });\r\n  \r\n    createNoteButton.addEventListener('click', () => {\r\n      noteForm.style.display = 'block';\r\n    });\r\n  \r\n    saveNoteButton.addEventListener('click', async () => {\r\n      const title = document.getElementById('note-title').value;\r\n      const content = document.getElementById('note-content').value;\r\n      const tags = document.getElementById('note-tags').value.split(',').map(tag => tag.trim());\r\n      const reminder = document.getElementById('note-reminder').value;\r\n      \r\n      const response = await fetch(`${API_BASE_URL}/notes`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({ title, content, tags, reminder, color: selectedColor })\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const note = await response.json();\r\n        renderNote(note);\r\n        noteForm.style.display = 'none';\r\n      } else {\r\n        alert('Failed to save note');\r\n      }\r\n    });\r\n  \r\n    document.querySelectorAll('.color-btn').forEach(button => {\r\n      button.addEventListener('click', (event) => {\r\n        selectedColor = event.target.getAttribute('data-color');\r\n      });\r\n    });\r\n  \r\n    async function fetchNotes() {\r\n      const response = await fetch(`${API_BASE_URL}/notes`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n      const notes = await response.json();\r\n      notes.forEach(note => renderNote(note));\r\n    }\r\n  \r\n    function renderNote(note) {\r\n      const noteElement = document.createElement('div');\r\n      noteElement.className = 'note';\r\n      noteElement.style.backgroundColor = note.color;\r\n      noteElement.innerHTML = `\r\n        <div class=\"note-header\">\r\n          <h2>${note.title}</h2>\r\n          <div class=\"note-tags\">${note.tags.join(', ')}</div>\r\n        </div>\r\n        <p>${note.content}</p>\r\n        ${note.reminder ? `<p>Reminder: ${new Date(note.reminder).toLocaleString()}</p>` : ''}\r\n      `;\r\n      notesContainer.appendChild(noteElement);\r\n    }\r\n  \r\n    async function fetchReminders() {\r\n      notesContainer.innerHTML = '';\r\n      const response = await fetch(`${API_BASE_URL}/notes/reminders`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n      const notes = await response.json();\r\n      notes.forEach(note => renderNote(note));\r\n    }\r\n  \r\n    document.getElementById('view-reminders').addEventListener('click', fetchReminders);\r\n  \r\n    fetchNotes();\r\n  });\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}